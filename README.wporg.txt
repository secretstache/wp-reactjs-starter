=== WP ReactJS Starter ===
Contributors: mguenter
Tags:
Donate link:
Stable tag: trunk
Requires at least: 5.2.0
Requires PHP: 7.0.0
Tested up to: 5.2
License: GPLv2
License:
License URI:

This WordPress plugin demonstrates how to setup a plugin that uses React and ES6 in a WordPress plugin.

== Description ==

A complete plugin generated by [create-wp-react-app](https://github.com/matzeeable/create-wp-react-app) and the boilerplate [wp-reactjs-starter](https://github.com/matzeeable/wp-reactjs-starter). It comes with a complete local development environment and the newest technologies to build your WordPress plugin: ES6, TypeScript, Docker, GitLab CI, ... Note: This plugin has no functionality, it simply demonstrates how the plugin gets deployed to wordpress.org plugin directory when using the starter plugin.

**Client-side features:** _Familiar React API & patterns (ES6) with TypeScript_

-   [**ReactJS**](https://reactjs.org/) v16 with **Babel v7** `env` preset
-   [**mobx-state-tree**](https://github.com/mobxjs/mobx-state-tree) for Model Driven State Management
-   [**webpack**](https://webpack.js.org/) v4 build for assets
-   CSS and TypeScript [**Sourcemap**](https://www.html5rocks.com/en/tutorials/developertools/sourcemaps/) generation for debugging purposes
-   [**SASS**](http://sass-lang.com/) stylesheets compiler (`.scss` files)
-   [**PostCSS**](http://postcss.org/) for transforming SCSS (including autoprefixing) to CSS
-   Generation of **minified** sources for production (JS, CSS)
-   [**Grunt**](https://gruntjs.com/) for automation tasks
-   [**TSLint**](https://palantir.github.io/tslint/) predefined configuration for proper linting
-   Admin backend components, in this case an own page with a button (`public/src/admin.js`)
-   Frontend components, in this case a simple widget (`public/src/widget.js`)

**Server-side features:** _OOP-style for building a high-quality plugin._

-   PHP >= **5.3** required: An admin notice is showed when not available
-   WordPress >= **4.4** required: An admin notice is showed when not available with a link to the updater
-   [**Namespace**](http://php.net/manual/en/language.namespaces.rationale.php) support
-   [**Autloading**](http://php.net/manual/en/language.oop5.autoload.php) classes in connection with namespaces
-   [**WP REST API v2**](http://v2.wp-api.org/) for API programming, no longer use `admin-ajax.php` for your CRUD operations
-   [`SCRIPT_DEBUG`](https://codex.wordpress.org/Debugging_in_WordPress#SCRIPT_DEBUG) enables not-minified sources for debug sources (use in connection with `yarn build:development`)
-   [**Cachebuster**](http://www.adopsinsider.com/ad-ops-basics/what-is-a-cache-buster-and-how-does-it-work/) for public resources (`public`)
-   Predefined `.po` files for **translating (i18n)** the plugin
-   [**phpDocumentor**](https://github.com/phpDocumentor/phpDocumentor2) for PHP Documentation
-   [**TypeDoc**](https://typedoc.org/guides/doccomments/) for JavaScript Documentation
-   [**apiDoc**](http://apidocjs.com//) for API Documentation
-   [**WP HookDoc**](https://github.com/matzeeable/wp-hookdoc) for Filters & Actions Documentation

**Other features:** _Providing the right development environment for a quality plugin._

-   Built on top of [**VSCode**](https://code.visualstudio.com/) (extensions are automatically installed)
-   [**Prettier**](https://prettier.io/) for automatic code beautifying on save (VSCode IDE)
-   [**Prettier PHP**](https://github.com/prettier/plugin-php#editor-integration) for PHP beautifying (needs manual installation)
-   [**Husky**](https://github.com/typicode/husky) integration for code beautifying (PHP, TS) before GIT commit - never have ugly code in your repository
-   **Husky** is also used for [**commitlint**](https://github.com/conventional-changelog/commitlint) to become a common commit message style in your repository
-   [**webpackbar**](https://github.com/nuxt/webpackbar) so you can get a real progress bar while development
-   Predefined [**GitLab CI**](https://about.gitlab.com/product/continuous-integration/) example for Continous Integration / Deployment
-   [**Docker**](https://www.docker.com/) for a local development environment
-   Within the Docker environment you have [**WP-CLI**](https://developer.wordpress.org/cli/commands/) available
-   [**Cypress**](https://www.cypress.io/) for End-To-End (E2E) tests

== Installation ==

1. Goto your wordpress backend
2. Navigate to Plugins > Add new
3. Search for "WP ReactJS Starter"
4. "Install"

OR 

1. Download the plugin from this site (wordpress.org)
2. Copy the extracted folder into your `wp-content/plugins` folder
3. Activate the "WP ReactJS Starter" plugin via the plugins admin page

== Frequently Asked Questions ==


== Screenshots ==


== Changelog ==
[include:CHANGELOG.md]

== Upgrade Notice ==

